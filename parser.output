Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: DEF ID LPAREN parameters RPAREN ARROW type COLON $@1 func_body

    6 $@2: %empty

    7 function: DEF ID LPAREN parameters RPAREN COLON $@2 func_body

    8 func_body: block
    9          | simple_statement SEMICOLON

   10 parameters: %empty
   11           | param_list

   12 param_list: param
   13           | param_list COMMA param
   14           | param_list SEMICOLON param

   15 param: type ID ASSIGN literal
   16      | type ID
   17      | ID ASSIGN literal
   18      | ID

   19 literal: INT_LITERAL
   20        | FLOAT_LITERAL
   21        | STR_LITERAL
   22        | BOOL_LITERAL

   23 type: INT
   24     | FLOAT
   25     | BOOL
   26     | STRING

   27 $@3: %empty

   28 block: LBRACE $@3 declarations statements RBRACE

   29 declarations: %empty
   30             | declarations declaration

   31 declaration: type var_decl_list SEMICOLON

   32 var_decl_list: var_spec
   33              | var_decl_list COMMA var_spec

   34 var_spec: ID
   35         | ID ASSIGN expression

   36 statements: %empty
   37           | statements statement

   38 statement: simple_statement SEMICOLON
   39          | compound_statement

   40 simple_statement: assignment
   41                 | function_call_stmt
   42                 | return_statement
   43                 | pass_statement

   44 pass_statement: PASS

   45 compound_statement: if_statement
   46                   | while_statement
   47                   | block

   48 suite: block
   49      | simple_statement SEMICOLON

   50 assignment: assignable_list ASSIGN expression_list

   51 assignable_list: assignable
   52                | assignable_list COMMA assignable

   53 assignable: ID
   54           | string_access

   55 expression_list: expression
   56                | expression_list COMMA expression

   57 function_call_stmt: function_call

   58 function_call: ID LPAREN args RPAREN

   59 args: %empty
   60     | arg_list

   61 arg_list: expression
   62         | arg_list COMMA expression

   63 if_statement: IF expression COLON suite elif_chain else_part

   64 elif_chain: %empty
   65           | elif_chain ELIF expression COLON suite

   66 else_part: %empty
   67          | ELSE COLON suite

   68 while_statement: WHILE expression COLON suite

   69 return_statement: RETURN expression
   70                 | RETURN

   71 expression: expression OR expression
   72           | expression AND expression
   73           | NOT expression
   74           | expression EQ expression
   75           | expression NE expression
   76           | expression GE expression
   77           | expression LE expression
   78           | expression GT expression
   79           | expression LT expression
   80           | expression IS expression
   81           | expression PLUS expression
   82           | expression MINUS expression
   83           | expression TIMES expression
   84           | expression DIVIDE expression
   85           | expression POW expression
   86           | MINUS expression
   87           | LPAREN expression RPAREN
   88           | literal
   89           | ID
   90           | string_access
   91           | function_call

   92 string_access: ID LBRACKET string_slice_content RBRACKET

   93 string_slice_content: expression
   94                     | opt_expr COLON opt_expr opt_slice_step

   95 opt_expr: %empty
   96         | expression

   97 opt_slice_step: %empty
   98               | COLON opt_expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <str> (258) 5 7 15 16 17 18 34 35 53 58 89 92
    INT_LITERAL <str> (259) 19
    FLOAT_LITERAL <str> (260) 20
    STR_LITERAL <str> (261) 21
    BOOL_LITERAL <str> (262) 22
    DEF (263) 5 7
    IF (264) 63
    ELIF (265) 65
    ELSE (266) 67
    WHILE (267) 68
    RETURN (268) 69 70
    PASS (269) 44
    AND (270) 72
    OR (271) 71
    NOT (272) 73
    INT (273) 23
    FLOAT (274) 24
    BOOL (275) 25
    STRING (276) 26
    GE (277) 76
    LE (278) 77
    EQ (279) 74
    NE (280) 75
    GT (281) 78
    LT (282) 79
    ASSIGN (283) 15 17 35 50
    IS (284) 80
    PLUS (285) 81
    MINUS (286) 82 86
    TIMES (287) 83
    DIVIDE (288) 84
    POW (289) 85
    SEMICOLON (290) 9 14 31 38 49
    COLON (291) 5 7 63 65 67 68 94 98
    COMMA (292) 13 33 52 56 62
    LBRACE (293) 28
    RBRACE (294) 28
    LPAREN (295) 5 7 58 87
    RPAREN (296) 5 7 58 87
    LBRACKET (297) 92
    RBRACKET (298) 92
    ARROW (299) 5
    UMINUS (300)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    program <node> (47)
        on left: 1
        on right: 0
    function_list <node> (48)
        on left: 2 3
        on right: 1 3
    function <node> (49)
        on left: 5 7
        on right: 2 3
    $@1 (50)
        on left: 4
        on right: 5
    $@2 (51)
        on left: 6
        on right: 7
    func_body <node> (52)
        on left: 8 9
        on right: 5 7
    parameters <node> (53)
        on left: 10 11
        on right: 5 7
    param_list <node> (54)
        on left: 12 13 14
        on right: 11 13 14
    param <node> (55)
        on left: 15 16 17 18
        on right: 12 13 14
    literal <node> (56)
        on left: 19 20 21 22
        on right: 15 17 88
    type <node> (57)
        on left: 23 24 25 26
        on right: 5 15 16 31
    block <node> (58)
        on left: 28
        on right: 8 47 48
    $@3 (59)
        on left: 27
        on right: 28
    declarations <node> (60)
        on left: 29 30
        on right: 28 30
    declaration <node> (61)
        on left: 31
        on right: 30
    var_decl_list <node> (62)
        on left: 32 33
        on right: 31 33
    var_spec <node> (63)
        on left: 34 35
        on right: 32 33
    statements <node> (64)
        on left: 36 37
        on right: 28 37
    statement <node> (65)
        on left: 38 39
        on right: 37
    simple_statement <node> (66)
        on left: 40 41 42 43
        on right: 9 38 49
    pass_statement <node> (67)
        on left: 44
        on right: 43
    compound_statement <node> (68)
        on left: 45 46 47
        on right: 39
    suite <node> (69)
        on left: 48 49
        on right: 63 65 67 68
    assignment <node> (70)
        on left: 50
        on right: 40
    assignable_list <node> (71)
        on left: 51 52
        on right: 50 52
    assignable <node> (72)
        on left: 53 54
        on right: 51 52
    expression_list <node> (73)
        on left: 55 56
        on right: 50 56
    function_call_stmt <node> (74)
        on left: 57
        on right: 41
    function_call <node> (75)
        on left: 58
        on right: 57 91
    args <node> (76)
        on left: 59 60
        on right: 58
    arg_list <node> (77)
        on left: 61 62
        on right: 60 62
    if_statement <node> (78)
        on left: 63
        on right: 45
    elif_chain <node> (79)
        on left: 64 65
        on right: 63 65
    else_part <node> (80)
        on left: 66 67
        on right: 63
    while_statement <node> (81)
        on left: 68
        on right: 46
    return_statement <node> (82)
        on left: 69 70
        on right: 42
    expression <node> (83)
        on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91
        on right: 35 55 56 61 62 63 65 68 69 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 93 96
    string_access <node> (84)
        on left: 92
        on right: 54 90
    string_slice_content <node> (85)
        on left: 93 94
        on right: 92
    opt_expr <node> (86)
        on left: 95 96
        on right: 94 98
    opt_slice_step <node> (87)
        on left: 97 98
        on right: 94


State 0

    0 $accept: . program $end

    DEF  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: DEF . ID LPAREN parameters RPAREN ARROW type COLON $@1 func_body
    7         | DEF . ID LPAREN parameters RPAREN COLON $@2 func_body

    ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    DEF  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: DEF ID . LPAREN parameters RPAREN ARROW type COLON $@1 func_body
    7         | DEF ID . LPAREN parameters RPAREN COLON $@2 func_body

    LPAREN  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: DEF ID LPAREN . parameters RPAREN ARROW type COLON $@1 func_body
    7         | DEF ID LPAREN . parameters RPAREN COLON $@2 func_body

    ID      shift, and go to state 9
    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    BOOL    shift, and go to state 12
    STRING  shift, and go to state 13

    $default  reduce using rule 10 (parameters)

    parameters  go to state 14
    param_list  go to state 15
    param       go to state 16
    type        go to state 17


State 9

   17 param: ID . ASSIGN literal
   18      | ID .

    ASSIGN  shift, and go to state 18

    $default  reduce using rule 18 (param)


State 10

   23 type: INT .

    $default  reduce using rule 23 (type)


State 11

   24 type: FLOAT .

    $default  reduce using rule 24 (type)


State 12

   25 type: BOOL .

    $default  reduce using rule 25 (type)


State 13

   26 type: STRING .

    $default  reduce using rule 26 (type)


State 14

    5 function: DEF ID LPAREN parameters . RPAREN ARROW type COLON $@1 func_body
    7         | DEF ID LPAREN parameters . RPAREN COLON $@2 func_body

    RPAREN  shift, and go to state 19


State 15

   11 parameters: param_list .
   13 param_list: param_list . COMMA param
   14           | param_list . SEMICOLON param

    SEMICOLON  shift, and go to state 20
    COMMA      shift, and go to state 21

    $default  reduce using rule 11 (parameters)


State 16

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


State 17

   15 param: type . ID ASSIGN literal
   16      | type . ID

    ID  shift, and go to state 22


State 18

   17 param: ID ASSIGN . literal

    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26

    literal  go to state 27


State 19

    5 function: DEF ID LPAREN parameters RPAREN . ARROW type COLON $@1 func_body
    7         | DEF ID LPAREN parameters RPAREN . COLON $@2 func_body

    COLON  shift, and go to state 28
    ARROW  shift, and go to state 29


State 20

   14 param_list: param_list SEMICOLON . param

    ID      shift, and go to state 9
    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    BOOL    shift, and go to state 12
    STRING  shift, and go to state 13

    param  go to state 30
    type   go to state 17


State 21

   13 param_list: param_list COMMA . param

    ID      shift, and go to state 9
    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    BOOL    shift, and go to state 12
    STRING  shift, and go to state 13

    param  go to state 31
    type   go to state 17


State 22

   15 param: type ID . ASSIGN literal
   16      | type ID .

    ASSIGN  shift, and go to state 32

    $default  reduce using rule 16 (param)


State 23

   19 literal: INT_LITERAL .

    $default  reduce using rule 19 (literal)


State 24

   20 literal: FLOAT_LITERAL .

    $default  reduce using rule 20 (literal)


State 25

   21 literal: STR_LITERAL .

    $default  reduce using rule 21 (literal)


State 26

   22 literal: BOOL_LITERAL .

    $default  reduce using rule 22 (literal)


State 27

   17 param: ID ASSIGN literal .

    $default  reduce using rule 17 (param)


State 28

    7 function: DEF ID LPAREN parameters RPAREN COLON . $@2 func_body

    $default  reduce using rule 6 ($@2)

    $@2  go to state 33


State 29

    5 function: DEF ID LPAREN parameters RPAREN ARROW . type COLON $@1 func_body

    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    BOOL    shift, and go to state 12
    STRING  shift, and go to state 13

    type  go to state 34


State 30

   14 param_list: param_list SEMICOLON param .

    $default  reduce using rule 14 (param_list)


State 31

   13 param_list: param_list COMMA param .

    $default  reduce using rule 13 (param_list)


State 32

   15 param: type ID ASSIGN . literal

    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26

    literal  go to state 35


State 33

    7 function: DEF ID LPAREN parameters RPAREN COLON $@2 . func_body

    ID      shift, and go to state 36
    RETURN  shift, and go to state 37
    PASS    shift, and go to state 38
    LBRACE  shift, and go to state 39

    func_body           go to state 40
    block               go to state 41
    simple_statement    go to state 42
    pass_statement      go to state 43
    assignment          go to state 44
    assignable_list     go to state 45
    assignable          go to state 46
    function_call_stmt  go to state 47
    function_call       go to state 48
    return_statement    go to state 49
    string_access       go to state 50


State 34

    5 function: DEF ID LPAREN parameters RPAREN ARROW type . COLON $@1 func_body

    COLON  shift, and go to state 51


State 35

   15 param: type ID ASSIGN literal .

    $default  reduce using rule 15 (param)


State 36

   53 assignable: ID .
   58 function_call: ID . LPAREN args RPAREN
   92 string_access: ID . LBRACKET string_slice_content RBRACKET

    LPAREN    shift, and go to state 52
    LBRACKET  shift, and go to state 53

    $default  reduce using rule 53 (assignable)


State 37

   69 return_statement: RETURN . expression
   70                 | RETURN .

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    $default  reduce using rule 70 (return_statement)

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 60
    string_access  go to state 61


State 38

   44 pass_statement: PASS .

    $default  reduce using rule 44 (pass_statement)


State 39

   28 block: LBRACE . $@3 declarations statements RBRACE

    $default  reduce using rule 27 ($@3)

    $@3  go to state 62


State 40

    7 function: DEF ID LPAREN parameters RPAREN COLON $@2 func_body .

    $default  reduce using rule 7 (function)


State 41

    8 func_body: block .

    $default  reduce using rule 8 (func_body)


State 42

    9 func_body: simple_statement . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 43

   43 simple_statement: pass_statement .

    $default  reduce using rule 43 (simple_statement)


State 44

   40 simple_statement: assignment .

    $default  reduce using rule 40 (simple_statement)


State 45

   50 assignment: assignable_list . ASSIGN expression_list
   52 assignable_list: assignable_list . COMMA assignable

    ASSIGN  shift, and go to state 64
    COMMA   shift, and go to state 65


State 46

   51 assignable_list: assignable .

    $default  reduce using rule 51 (assignable_list)


State 47

   41 simple_statement: function_call_stmt .

    $default  reduce using rule 41 (simple_statement)


State 48

   57 function_call_stmt: function_call .

    $default  reduce using rule 57 (function_call_stmt)


State 49

   42 simple_statement: return_statement .

    $default  reduce using rule 42 (simple_statement)


State 50

   54 assignable: string_access .

    $default  reduce using rule 54 (assignable)


State 51

    5 function: DEF ID LPAREN parameters RPAREN ARROW type COLON . $@1 func_body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 66


State 52

   58 function_call: ID LPAREN . args RPAREN

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    $default  reduce using rule 59 (args)

    literal        go to state 58
    function_call  go to state 59
    args           go to state 67
    arg_list       go to state 68
    expression     go to state 69
    string_access  go to state 61


State 53

   92 string_access: ID LBRACKET . string_slice_content RBRACKET

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    $default  reduce using rule 95 (opt_expr)

    literal               go to state 58
    function_call         go to state 59
    expression            go to state 70
    string_access         go to state 61
    string_slice_content  go to state 71
    opt_expr              go to state 72


State 54

   58 function_call: ID . LPAREN args RPAREN
   89 expression: ID .
   92 string_access: ID . LBRACKET string_slice_content RBRACKET

    LPAREN    shift, and go to state 52
    LBRACKET  shift, and go to state 53

    $default  reduce using rule 89 (expression)


State 55

   73 expression: NOT . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 73
    string_access  go to state 61


State 56

   86 expression: MINUS . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 74
    string_access  go to state 61


State 57

   87 expression: LPAREN . expression RPAREN

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 75
    string_access  go to state 61


State 58

   88 expression: literal .

    $default  reduce using rule 88 (expression)


State 59

   91 expression: function_call .

    $default  reduce using rule 91 (expression)


State 60

   69 return_statement: RETURN expression .
   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 69 (return_statement)


State 61

   90 expression: string_access .

    $default  reduce using rule 90 (expression)


State 62

   28 block: LBRACE $@3 . declarations statements RBRACE

    $default  reduce using rule 29 (declarations)

    declarations  go to state 90


State 63

    9 func_body: simple_statement SEMICOLON .

    $default  reduce using rule 9 (func_body)


State 64

   50 assignment: assignable_list ASSIGN . expression_list

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal          go to state 58
    expression_list  go to state 91
    function_call    go to state 59
    expression       go to state 92
    string_access    go to state 61


State 65

   52 assignable_list: assignable_list COMMA . assignable

    ID  shift, and go to state 93

    assignable     go to state 94
    string_access  go to state 50


State 66

    5 function: DEF ID LPAREN parameters RPAREN ARROW type COLON $@1 . func_body

    ID      shift, and go to state 36
    RETURN  shift, and go to state 37
    PASS    shift, and go to state 38
    LBRACE  shift, and go to state 39

    func_body           go to state 95
    block               go to state 41
    simple_statement    go to state 42
    pass_statement      go to state 43
    assignment          go to state 44
    assignable_list     go to state 45
    assignable          go to state 46
    function_call_stmt  go to state 47
    function_call       go to state 48
    return_statement    go to state 49
    string_access       go to state 50


State 67

   58 function_call: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 96


State 68

   60 args: arg_list .
   62 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 97

    $default  reduce using rule 60 (args)


State 69

   61 arg_list: expression .
   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 61 (arg_list)


State 70

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression
   93 string_slice_content: expression .
   96 opt_expr: expression .

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    COLON     reduce using rule 96 (opt_expr)
    $default  reduce using rule 93 (string_slice_content)


State 71

   92 string_access: ID LBRACKET string_slice_content . RBRACKET

    RBRACKET  shift, and go to state 98


State 72

   94 string_slice_content: opt_expr . COLON opt_expr opt_slice_step

    COLON  shift, and go to state 99


State 73

   71 expression: expression . OR expression
   72           | expression . AND expression
   73           | NOT expression .
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 73 (expression)


State 74

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression
   86           | MINUS expression .

    $default  reduce using rule 86 (expression)


State 75

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression
   87           | LPAREN expression . RPAREN

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89
    RPAREN  shift, and go to state 100


State 76

   72 expression: expression AND . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 101
    string_access  go to state 61


State 77

   71 expression: expression OR . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 102
    string_access  go to state 61


State 78

   76 expression: expression GE . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 103
    string_access  go to state 61


State 79

   77 expression: expression LE . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 104
    string_access  go to state 61


State 80

   74 expression: expression EQ . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 105
    string_access  go to state 61


State 81

   75 expression: expression NE . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 106
    string_access  go to state 61


State 82

   78 expression: expression GT . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 107
    string_access  go to state 61


State 83

   79 expression: expression LT . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 108
    string_access  go to state 61


State 84

   80 expression: expression IS . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 109
    string_access  go to state 61


State 85

   81 expression: expression PLUS . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 110
    string_access  go to state 61


State 86

   82 expression: expression MINUS . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 111
    string_access  go to state 61


State 87

   83 expression: expression TIMES . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 112
    string_access  go to state 61


State 88

   84 expression: expression DIVIDE . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 113
    string_access  go to state 61


State 89

   85 expression: expression POW . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 114
    string_access  go to state 61


State 90

   28 block: LBRACE $@3 declarations . statements RBRACE
   30 declarations: declarations . declaration

    INT     shift, and go to state 10
    FLOAT   shift, and go to state 11
    BOOL    shift, and go to state 12
    STRING  shift, and go to state 13

    $default  reduce using rule 36 (statements)

    type         go to state 115
    declaration  go to state 116
    statements   go to state 117


State 91

   50 assignment: assignable_list ASSIGN expression_list .
   56 expression_list: expression_list . COMMA expression

    COMMA  shift, and go to state 118

    $default  reduce using rule 50 (assignment)


State 92

   55 expression_list: expression .
   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 55 (expression_list)


State 93

   53 assignable: ID .
   92 string_access: ID . LBRACKET string_slice_content RBRACKET

    LBRACKET  shift, and go to state 53

    $default  reduce using rule 53 (assignable)


State 94

   52 assignable_list: assignable_list COMMA assignable .

    $default  reduce using rule 52 (assignable_list)


State 95

    5 function: DEF ID LPAREN parameters RPAREN ARROW type COLON $@1 func_body .

    $default  reduce using rule 5 (function)


State 96

   58 function_call: ID LPAREN args RPAREN .

    $default  reduce using rule 58 (function_call)


State 97

   62 arg_list: arg_list COMMA . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 119
    string_access  go to state 61


State 98

   92 string_access: ID LBRACKET string_slice_content RBRACKET .

    $default  reduce using rule 92 (string_access)


State 99

   94 string_slice_content: opt_expr COLON . opt_expr opt_slice_step

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    $default  reduce using rule 95 (opt_expr)

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 120
    string_access  go to state 61
    opt_expr       go to state 121


State 100

   87 expression: LPAREN expression RPAREN .

    $default  reduce using rule 87 (expression)


State 101

   71 expression: expression . OR expression
   72           | expression . AND expression
   72           | expression AND expression .
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 72 (expression)


State 102

   71 expression: expression . OR expression
   71           | expression OR expression .
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    AND     shift, and go to state 76
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 71 (expression)


State 103

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   76           | expression GE expression .
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 76 (expression)


State 104

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   77           | expression LE expression .
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 77 (expression)


State 105

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   74           | expression EQ expression .
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 74 (expression)


State 106

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   75           | expression NE expression .
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 75 (expression)


State 107

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   78           | expression GT expression .
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 78 (expression)


State 108

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   79           | expression LT expression .
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 79 (expression)


State 109

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   80           | expression IS expression .
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 80 (expression)


State 110

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   81           | expression PLUS expression .
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 81 (expression)


State 111

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   82           | expression MINUS expression .
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 82 (expression)


State 112

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   83           | expression TIMES expression .
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    POW  shift, and go to state 89

    $default  reduce using rule 83 (expression)


State 113

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   84           | expression DIVIDE expression .
   85           | expression . POW expression

    POW  shift, and go to state 89

    $default  reduce using rule 84 (expression)


State 114

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression
   85           | expression POW expression .

    POW  shift, and go to state 89

    $default  reduce using rule 85 (expression)


State 115

   31 declaration: type . var_decl_list SEMICOLON

    ID  shift, and go to state 122

    var_decl_list  go to state 123
    var_spec       go to state 124


State 116

   30 declarations: declarations declaration .

    $default  reduce using rule 30 (declarations)


State 117

   28 block: LBRACE $@3 declarations statements . RBRACE
   37 statements: statements . statement

    ID      shift, and go to state 36
    IF      shift, and go to state 125
    WHILE   shift, and go to state 126
    RETURN  shift, and go to state 37
    PASS    shift, and go to state 38
    LBRACE  shift, and go to state 39
    RBRACE  shift, and go to state 127

    block               go to state 128
    statement           go to state 129
    simple_statement    go to state 130
    pass_statement      go to state 43
    compound_statement  go to state 131
    assignment          go to state 44
    assignable_list     go to state 45
    assignable          go to state 46
    function_call_stmt  go to state 47
    function_call       go to state 48
    if_statement        go to state 132
    while_statement     go to state 133
    return_statement    go to state 49
    string_access       go to state 50


State 118

   56 expression_list: expression_list COMMA . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 134
    string_access  go to state 61


State 119

   62 arg_list: arg_list COMMA expression .
   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 62 (arg_list)


State 120

   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression
   96 opt_expr: expression .

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 96 (opt_expr)


State 121

   94 string_slice_content: opt_expr COLON opt_expr . opt_slice_step

    COLON  shift, and go to state 135

    $default  reduce using rule 97 (opt_slice_step)

    opt_slice_step  go to state 136


State 122

   34 var_spec: ID .
   35         | ID . ASSIGN expression

    ASSIGN  shift, and go to state 137

    $default  reduce using rule 34 (var_spec)


State 123

   31 declaration: type var_decl_list . SEMICOLON
   33 var_decl_list: var_decl_list . COMMA var_spec

    SEMICOLON  shift, and go to state 138
    COMMA      shift, and go to state 139


State 124

   32 var_decl_list: var_spec .

    $default  reduce using rule 32 (var_decl_list)


State 125

   63 if_statement: IF . expression COLON suite elif_chain else_part

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 140
    string_access  go to state 61


State 126

   68 while_statement: WHILE . expression COLON suite

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 141
    string_access  go to state 61


State 127

   28 block: LBRACE $@3 declarations statements RBRACE .

    $default  reduce using rule 28 (block)


State 128

   47 compound_statement: block .

    $default  reduce using rule 47 (compound_statement)


State 129

   37 statements: statements statement .

    $default  reduce using rule 37 (statements)


State 130

   38 statement: simple_statement . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 131

   39 statement: compound_statement .

    $default  reduce using rule 39 (statement)


State 132

   45 compound_statement: if_statement .

    $default  reduce using rule 45 (compound_statement)


State 133

   46 compound_statement: while_statement .

    $default  reduce using rule 46 (compound_statement)


State 134

   56 expression_list: expression_list COMMA expression .
   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 56 (expression_list)


State 135

   98 opt_slice_step: COLON . opt_expr

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    $default  reduce using rule 95 (opt_expr)

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 120
    string_access  go to state 61
    opt_expr       go to state 143


State 136

   94 string_slice_content: opt_expr COLON opt_expr opt_slice_step .

    $default  reduce using rule 94 (string_slice_content)


State 137

   35 var_spec: ID ASSIGN . expression

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 144
    string_access  go to state 61


State 138

   31 declaration: type var_decl_list SEMICOLON .

    $default  reduce using rule 31 (declaration)


State 139

   33 var_decl_list: var_decl_list COMMA . var_spec

    ID  shift, and go to state 122

    var_spec  go to state 145


State 140

   63 if_statement: IF expression . COLON suite elif_chain else_part
   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89
    COLON   shift, and go to state 146


State 141

   68 while_statement: WHILE expression . COLON suite
   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89
    COLON   shift, and go to state 147


State 142

   38 statement: simple_statement SEMICOLON .

    $default  reduce using rule 38 (statement)


State 143

   98 opt_slice_step: COLON opt_expr .

    $default  reduce using rule 98 (opt_slice_step)


State 144

   35 var_spec: ID ASSIGN expression .
   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89

    $default  reduce using rule 35 (var_spec)


State 145

   33 var_decl_list: var_decl_list COMMA var_spec .

    $default  reduce using rule 33 (var_decl_list)


State 146

   63 if_statement: IF expression COLON . suite elif_chain else_part

    ID      shift, and go to state 36
    RETURN  shift, and go to state 37
    PASS    shift, and go to state 38
    LBRACE  shift, and go to state 39

    block               go to state 148
    simple_statement    go to state 149
    pass_statement      go to state 43
    suite               go to state 150
    assignment          go to state 44
    assignable_list     go to state 45
    assignable          go to state 46
    function_call_stmt  go to state 47
    function_call       go to state 48
    return_statement    go to state 49
    string_access       go to state 50


State 147

   68 while_statement: WHILE expression COLON . suite

    ID      shift, and go to state 36
    RETURN  shift, and go to state 37
    PASS    shift, and go to state 38
    LBRACE  shift, and go to state 39

    block               go to state 148
    simple_statement    go to state 149
    pass_statement      go to state 43
    suite               go to state 151
    assignment          go to state 44
    assignable_list     go to state 45
    assignable          go to state 46
    function_call_stmt  go to state 47
    function_call       go to state 48
    return_statement    go to state 49
    string_access       go to state 50


State 148

   48 suite: block .

    $default  reduce using rule 48 (suite)


State 149

   49 suite: simple_statement . SEMICOLON

    SEMICOLON  shift, and go to state 152


State 150

   63 if_statement: IF expression COLON suite . elif_chain else_part

    $default  reduce using rule 64 (elif_chain)

    elif_chain  go to state 153


State 151

   68 while_statement: WHILE expression COLON suite .

    $default  reduce using rule 68 (while_statement)


State 152

   49 suite: simple_statement SEMICOLON .

    $default  reduce using rule 49 (suite)


State 153

   63 if_statement: IF expression COLON suite elif_chain . else_part
   65 elif_chain: elif_chain . ELIF expression COLON suite

    ELIF  shift, and go to state 154
    ELSE  shift, and go to state 155

    $default  reduce using rule 66 (else_part)

    else_part  go to state 156


State 154

   65 elif_chain: elif_chain ELIF . expression COLON suite

    ID             shift, and go to state 54
    INT_LITERAL    shift, and go to state 23
    FLOAT_LITERAL  shift, and go to state 24
    STR_LITERAL    shift, and go to state 25
    BOOL_LITERAL   shift, and go to state 26
    NOT            shift, and go to state 55
    MINUS          shift, and go to state 56
    LPAREN         shift, and go to state 57

    literal        go to state 58
    function_call  go to state 59
    expression     go to state 157
    string_access  go to state 61


State 155

   67 else_part: ELSE . COLON suite

    COLON  shift, and go to state 158


State 156

   63 if_statement: IF expression COLON suite elif_chain else_part .

    $default  reduce using rule 63 (if_statement)


State 157

   65 elif_chain: elif_chain ELIF expression . COLON suite
   71 expression: expression . OR expression
   72           | expression . AND expression
   74           | expression . EQ expression
   75           | expression . NE expression
   76           | expression . GE expression
   77           | expression . LE expression
   78           | expression . GT expression
   79           | expression . LT expression
   80           | expression . IS expression
   81           | expression . PLUS expression
   82           | expression . MINUS expression
   83           | expression . TIMES expression
   84           | expression . DIVIDE expression
   85           | expression . POW expression

    AND     shift, and go to state 76
    OR      shift, and go to state 77
    GE      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81
    GT      shift, and go to state 82
    LT      shift, and go to state 83
    IS      shift, and go to state 84
    PLUS    shift, and go to state 85
    MINUS   shift, and go to state 86
    TIMES   shift, and go to state 87
    DIVIDE  shift, and go to state 88
    POW     shift, and go to state 89
    COLON   shift, and go to state 159


State 158

   67 else_part: ELSE COLON . suite

    ID      shift, and go to state 36
    RETURN  shift, and go to state 37
    PASS    shift, and go to state 38
    LBRACE  shift, and go to state 39

    block               go to state 148
    simple_statement    go to state 149
    pass_statement      go to state 43
    suite               go to state 160
    assignment          go to state 44
    assignable_list     go to state 45
    assignable          go to state 46
    function_call_stmt  go to state 47
    function_call       go to state 48
    return_statement    go to state 49
    string_access       go to state 50


State 159

   65 elif_chain: elif_chain ELIF expression COLON . suite

    ID      shift, and go to state 36
    RETURN  shift, and go to state 37
    PASS    shift, and go to state 38
    LBRACE  shift, and go to state 39

    block               go to state 148
    simple_statement    go to state 149
    pass_statement      go to state 43
    suite               go to state 161
    assignment          go to state 44
    assignable_list     go to state 45
    assignable          go to state 46
    function_call_stmt  go to state 47
    function_call       go to state 48
    return_statement    go to state 49
    string_access       go to state 50


State 160

   67 else_part: ELSE COLON suite .

    $default  reduce using rule 67 (else_part)


State 161

   65 elif_chain: elif_chain ELIF expression COLON suite .

    $default  reduce using rule 65 (elif_chain)
