# comment
def foo1(int a , c ; string c1 )-> bool : {
    bool res = True;
    string x, b;
    int y = 0;
    b = '&';
    #1 a = x;
    #2 b = 8;
    a = (y*7)/a-y;
    a = (y*7)/b-y;
    #7 3+6 = 9;
    #8 x =6 ;
    return res;
}


def goo2 (int l , int m , int n)-> bool : {
    int i = 9;
    bool x = True;
    string k;
    int m2 = m;  # Store parameter m in local variable
    k = '@';
    #i = l + l;
    #11 i= j+1;
    #12 i= k+1;

    if (k == '*') or (x != False) and ( l + m2 < i) :
        x = l < m2;
    return x;
}


def goo1(int i , k ) : {
    string x;
    int j = 0;
    bool z;
    z= goo2(5, i, j);
    #16 n= false;
    #17 x= '#';
}


def si1(int t) -> int: # function declaration 
{
    int i, j, k;
    int temp;
    temp= t*t;
    return temp;
}



def foo3(int I , int j , int k ) -> int : {
    int i = 4;
    int total; # variable declaration
    bool bo;
    bo= foo1 (i, k, '^');
    #18 j= foo2();
    total = si1(i+j+k); # statemets
    return total;
}


def foo2() -> int: {
    string s1 , s2 ;
    int i=0, j=0, cnt;
    cnt= 1;
    while ( i < 100): {
        cnt=cnt*2;
        j= j+1;
        i= i+1;
    }
    return cnt;
}



def __main__() :
{
    int x1;
    x1 = foo2();
    return x1;
}